package resource;


import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;


import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import document.Users;
import repository.UserRepository;
import service.UserService;


@RestController
@RequestMapping("/rest/users")
public class UsersResource {
	
	@Autowired
	UserService userService;
	
	public UsersResource() {
		
	}
	
	public UsersResource(UserService userService) {
		super();
		this.userService = userService;
	}


//	UserRepository userRepository;
//	
//	public UsersResource(UserRepository userRepository) {
//		super();
//		this.userRepository = userRepository;
//	}

	@GetMapping("/all")
	public List<Users> getAll() throws Exception{
		List<Users> users = (List<Users>) userRepository.findAll();
		return users;
	}
	
	@GetMapping("/{userId}")
	public Optional<Users> getUser(@PathVariable String userId) throws Exception  {
		return userRepository.findById(userId);
	}
	

	@DeleteMapping("delete/{userId}")
	public boolean deleteUser(@PathVariable String userId) {
		userRepository.deleteById(userId);
		return true;
	}
	
	
	@PostMapping("/post")
	public void save(@RequestBody Users users) throws Exception {
		if(!userRepository.existsById(users.getUserId()))
	{
			userRepository.save(users);
	}
	else {			
		throw new Exception("userId already exists");
	}
    }
	
	

//	
//	@Autowired
//	UserService userService;
//	
//
//	public UsersResource(UserService userService) {
//		this.userService = userService;
//	}
//	
//	@GetMapping("/all")
//	public List<Users> getAll() throws Exception{
//		
//		List<Users> users = userService.getAll();
//		return users;
//		
//	}
//	
//	@GetMapping("/user/{userId}")
//	public Optional<Users> getUser(@PathVariable String userId) throws Exception  {
//		return userService.getUser(userId);
//		
//    }
//	
//	@DeleteMapping("delete/{userId}")
//	public boolean deleteUser(@PathVariable String userId) {
//		userService.deleteUser(userId);
//		return true;
//	}
//
//	
//	@PostMapping("/post")
//	public  void save(Users users) throws Exception {
//		userService.save(users);
//	}
//	
	

}
